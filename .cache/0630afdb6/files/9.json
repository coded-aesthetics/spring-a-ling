{"contents":"exports.__esModule = true;\nvar p5_1 = __fusereq(5);\nvar p5_1d = __fuse.dt(p5_1);\nvar particle_utils_1 = __fusereq(8);\nfunction Spring(particle_center_, connected_particle_, tension_) {\n  this.particle_center = particle_center_;\n  this.connected_particle = connected_particle_;\n  this.tension = tension_;\n  this.update = function (time_slice, surface_smoothness) {\n    const dist = particle_utils_1.particle_dist_2(this.particle_center, this.connected_particle);\n    const direction = p5_1d.default.Vector.sub(this.particle_center.pos, this.connected_particle.pos).normalize();\n    this.connected_particle.act(direction.mult(this.tension * time_slice * dist));\n    this.connected_particle.update(time_slice, surface_smoothness);\n    this.particle_center.update(time_slice, surface_smoothness);\n  };\n}\nexports.Spring = Spring;\n","sourceMap":"{\"version\":3,\"sources\":[\"src/spring.ts\"],\"names\":[\"particle_center_\",\"connected_particle_\",\"tension_\",\"particle_center\",\"connected_particle\",\"tension\",\"update\",\"time_slice\",\"surface_smoothness\",\"dist\",\"particle_utils_1\",\"direction\",\"p5_1d\",\"Vector\",\"sub\",\"pos\",\"normalize\",\"act\",\"mult\"],\"mappings\":\";;;;AAGO,gBAAgBA,kBAAkBC,qBAAqBC;EAC1D,KAAKC,kBAAkBH;EACvB,KAAKI,qBAAqBH;EAC1B,KAAKI,UAAUH;EACf,KAAKI,SAAS,UAASC,YAAYC;UAC3BC,OAAOC,iCAAgB,KAAKP,iBAAiB,KAAKC;UAClDO,YAAYC,cAAGC,OAAOC,IAAI,KAAKX,gBAAgBY,KAAK,KAAKX,mBAAmBW,KAAKC;IACvF,KAAKZ,mBAAmBa,IAAIN,UAAUO,KAAK,KAAKb,UAAUE,aAAaE;IACvE,KAAKL,mBAAmBE,OAAOC,YAAYC;IAC3C,KAAKL,gBAAgBG,OAAOC,YAAYC\",\"sourcesContent\":[\"import p5 from 'p5';\\nimport { particle_dist_2 } from './particle-utils';\\n\\nexport function Spring(particle_center_, connected_particle_, tension_) {\\n    this.particle_center = particle_center_;\\n    this.connected_particle = connected_particle_;\\n    this.tension = tension_;\\n    this.update = function(time_slice, surface_smoothness) {\\n      const dist = particle_dist_2(this.particle_center, this.connected_particle);\\n      const direction = p5.Vector.sub(this.particle_center.pos, this.connected_particle.pos).normalize();\\n      this.connected_particle.act(direction.mult(this.tension * time_slice * dist));\\n      this.connected_particle.update(time_slice, surface_smoothness);\\n      this.particle_center.update(time_slice, surface_smoothness);\\n    }\\n  }\\n\"]}"}