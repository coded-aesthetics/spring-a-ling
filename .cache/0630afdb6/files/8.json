{"contents":"exports.__esModule = true;\nvar p5_1 = __fusereq(5);\nvar p5_1d = __fuse.dt(p5_1);\nvar particle_1 = __fusereq(4);\nfunction particle_dist_2(p, p2) {\n  const distVec = p5_1d.default.Vector.sub(p.pos, p2.pos);\n  return distVec.magSq();\n}\nexports.particle_dist_2 = particle_dist_2;\nfunction particle_dist(p, p2) {\n  return p.pos.dist(p2.pos);\n}\nexports.particle_dist = particle_dist;\nfunction create_random_particles(amount, minX, maxX, minY, maxY) {\n  let particles = [];\n  for (let i = 0; i < amount; i++) {\n    particles.push(new particle_1.Particle(Math.random() * (maxX - minX) - minX, Math.random() * (maxY - minY) - minY));\n  }\n  return particles;\n}\nexports.create_random_particles = create_random_particles;\nfunction sort_particles_by_vicinity(particles) {\n  let sorted_particles = [];\n  sorted_particles.push(particles[0]);\n  for (let i = 0; i < particles.length - 1; i++) {\n    const restArray = particles.slice(i + 1);\n    restArray.sort((a, b) => particle_dist(a, particles[i]) - particle_dist(b, particles[i]));\n    sorted_particles.push(restArray[0]);\n    particles = sorted_particles.concat(restArray.slice(1));\n  }\n  return sorted_particles;\n}\nexports.sort_particles_by_vicinity = sort_particles_by_vicinity;\n","sourceMap":"{\"version\":3,\"sources\":[\"src/particle-utils.ts\"],\"names\":[\"p\",\"p2\",\"distVec\",\"p5_1d\",\"Vector\",\"sub\",\"pos\",\"magSq\",\"dist\",\"amount\",\"minX\",\"maxX\",\"minY\",\"maxY\",\"particles\",\"i\",\"push\",\"particle_1\",\"Math\",\"random\",\"sorted_particles\",\"length\",\"restArray\",\"slice\",\"sort\",\"a\",\"b\",\"particle_dist\",\"concat\"],\"mappings\":\";;;;AAGO,yBAA0BA,GAAGC;QAC1BC,UAAUC,cAAGC,OAAOC,IAAIL,EAAEM,KAAKL,GAAGK;SACjCJ,QAAQK;;;AAGV,uBAAwBP,GAAGC;SACzBD,EAAEM,IAAIE,KAAKP,GAAGK;;;AAGlB,iCAAiCG,QAAQC,MAAMC,MAAMC,MAAMC;MAC1DC;WACKC,IAAI,GAAGA,IAAIN,QAAQM;IAC1BD,UAAUE,SAASC,oBAAUC,KAAKC,YAAWR,OAAOD,QAASA,MAAOQ,KAAKC,YAAWN,OAAOD,QAASA;;SAE/FE;;;AAGJ,oCAAoCA;MACnCM;EACJA,iBAAiBJ,KAAKF,UAAU;WACvBC,IAAI,GAAGA,IAAID,UAAUO,SAAS,GAAGN;UAClCO,YAAYR,UAAUS,MAAOR,IAAI;IACvCO,UAAUE,KAAK,CAACC,GAAGC,MAAMC,cAAcF,GAAGX,UAAUC,MAAMY,cAAcD,GAAGZ,UAAUC;IACrFK,iBAAiBJ,KAAKM,UAAU;IAChCR,YAAYM,iBAAiBQ,OAAON,UAAUC,MAAM;;SAE/CH\",\"sourcesContent\":[\"import p5 from 'p5';\\nimport { Particle } from './particle';\\n\\nexport function particle_dist_2 (p, p2) {\\n    const distVec = p5.Vector.sub(p.pos, p2.pos);\\n    return distVec.magSq();\\n  }\\n\\n  export function particle_dist (p, p2) {\\n    return p.pos.dist(p2.pos);\\n  }\\n\\nexport function create_random_particles(amount, minX, maxX, minY, maxY) {\\n    let particles = [];\\n    for (let i = 0; i < amount; i++) {\\n      particles.push(new Particle((Math.random()* (maxX - minX)) - minX, (Math.random()* (maxY - minY)) - minY));\\n    }\\n    return particles;\\n  }\\n\\nexport function sort_particles_by_vicinity(particles) {\\n    let sorted_particles = [];\\n    sorted_particles.push(particles[0]);\\n    for (let i = 0; i < particles.length - 1; i++) {\\n      const restArray = particles.slice( i + 1 );\\n      restArray.sort((a, b) => particle_dist(a, particles[i]) - particle_dist(b, particles[i]))\\n      sorted_particles.push(restArray[0]);\\n      particles = sorted_particles.concat(restArray.slice(1));\\n    }\\n    return sorted_particles;\\n  }\"]}"}