{"contents":"exports.__esModule = true;\nvar p5_1 = __fusereq(5);\nvar p5_1d = __fuse.dt(p5_1);\nfunction Particle(x_, y_, velocity_ = new p5_1d.default.Vector().set(0, 0)) {\n  this.velocity = velocity_;\n  this.pos = new p5_1d.default.Vector().set(x_, y_);\n  this.nudge = function (dx, dy) {\n    return new Particle(x_ + dx, y_ + dy, velocity_);\n  };\n  this.act = function (velocity) {\n    this.velocity.add(velocity);\n  };\n  this.update = function (time_slice, surface_smoothness) {\n    this.velocity.mult(1 - (1 - surface_smoothness) * time_slice);\n    this.pos.add(p5_1d.default.Vector.mult(this.velocity, time_slice));\n  };\n  this.emit_particles = function (amount) {\n    const particles = [];\n    for (let i = 0; i < amount; i++) {\n      particles.push(new Particle(this.pos.x, this.pos.y, p5_1d.default.Vector.add(this.velocity, new p5_1d.default.Vector().set(Math.random() * 1000 - 500, Math.random() * 1000 - 500))));\n    }\n    return particles;\n  };\n}\nexports.Particle = Particle;\n","sourceMap":"{\"version\":3,\"sources\":[\"src/particle.ts\"],\"names\":[\"x_\",\"y_\",\"velocity_\",\"p5_1d\",\"Vector\",\"set\",\"velocity\",\"pos\",\"nudge\",\"dx\",\"dy\",\"Particle\",\"act\",\"add\",\"update\",\"time_slice\",\"surface_smoothness\",\"mult\",\"emit_particles\",\"amount\",\"particles\",\"i\",\"push\",\"x\",\"y\",\"Math\",\"random\"],\"mappings\":\";;;AAEO,kBAAkBA,IAAIC,IAAIC,gBAAgBC,cAAGC,SAASC,IAAI,GAAE;EACjE,KAAKC,WAAWJ;EAChB,KAAKK,UAAUJ,cAAGC,SAASC,IAAIL,IAAKC;EAEpC,KAAKO,QAAQ,UAAUC,IAAIC;eACdC,SAASX,KAAKS,IAAIR,KAAKS,IAAIR;;EAGxC,KAAKU,MAAM,UAAUN;IACnB,KAAKA,SAASO,IAAIP;;EAGpB,KAAKQ,SAAS,UAAUC,YAAYC;IAClC,KAAKV,SAASW,KAAK,KAAK,IAAID,sBAAsBD;IAClD,KAAKR,IAAIM,IAAIV,cAAGC,OAAOa,KAAK,KAAKX,UAAUS;;EAG7C,KAAKG,iBAAiB,UAASC;UACvBC;aACGC,IAAI,GAAGA,IAAIF,QAAQE;MAC1BD,UAAUE,SACJX,SAAS,KAAKJ,IAAIgB,GAAG,KAAKhB,IAAIiB,GAChCrB,cAAGC,OAAOS,IAAI,KAAKP,cAAcH,cAAGC,SAASC,IAC3CoB,KAAKC,WAAW,OAAO,KACvBD,KAAKC,WAAW,OAAO;;WAIxBN\",\"sourcesContent\":[\"import p5 from 'p5';\\n\\nexport function Particle(x_, y_, velocity_ = new p5.Vector().set(0,0)) {\\n  this.velocity = velocity_;\\n  this.pos = new p5.Vector().set(x_ , y_);\\n\\n  this.nudge = function (dx, dy) {\\n    return new Particle(x_ + dx, y_ + dy, velocity_);\\n  }\\n\\n  this.act = function (velocity) {\\n    this.velocity.add(velocity);\\n  }\\n\\n  this.update = function (time_slice, surface_smoothness) {\\n    this.velocity.mult(1- ((1 - surface_smoothness) * time_slice));\\n    this.pos.add(p5.Vector.mult(this.velocity, time_slice));\\n  }\\n\\n  this.emit_particles = function(amount) {\\n    const particles = [];\\n    for (let i = 0; i < amount; i++) {\\n      particles.push(\\n        new Particle(this.pos.x, this.pos.y,\\n          p5.Vector.add(this.velocity, new p5.Vector().set(\\n            Math.random() * 1000 - 500,\\n            Math.random() * 1000 - 500)\\n          ))\\n        );\\n    }\\n    return particles;\\n  }\\n}\"]}"}