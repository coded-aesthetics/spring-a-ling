{"contents":"exports.__esModule = true;\nvar particle_utils_1 = __fusereq(8);\nvar spring_1 = __fusereq(9);\nfunction SpringRing(amount) {\n  this.springs = [];\n  let particles = particle_utils_1.create_random_particles(amount, 0, window.innerWidth, 0, window.innerHeight);\n  let sorted_particles = particle_utils_1.sort_particles_by_vicinity(particles);\n  for (let i = 0; i < sorted_particles.length - 1; i++) {\n    this.springs.push(new spring_1.Spring(sorted_particles[i], sorted_particles[i + 1], Math.random() * 0.0025));\n  }\n  this.springs.push(new spring_1.Spring(sorted_particles[sorted_particles.length - 1], sorted_particles[0], Math.random() * 0.0025));\n  this.update = function (time_slice, surface_smoothness) {\n    this.springs.forEach(spring => spring.update(time_slice, surface_smoothness));\n  };\n}\nexports.SpringRing = SpringRing;\n","sourceMap":"{\"version\":3,\"sources\":[\"src/spring-ring.ts\"],\"names\":[\"amount\",\"springs\",\"particles\",\"particle_utils_1\",\"window\",\"innerWidth\",\"innerHeight\",\"sorted_particles\",\"i\",\"length\",\"push\",\"spring_1\",\"Math\",\"random\",\"update\",\"time_slice\",\"surface_smoothness\",\"forEach\",\"spring\"],\"mappings\":\";;;AAGO,oBAAoBA;EAEvB,KAAKC;MACDC,YAAYC,yCAAwBH,QAAQ,GAAGI,OAAOC,YAAY,GAAGD,OAAOE;MAC5EC,mBAAmBJ,4CAA2BD;WACzCM,IAAI,GAAGA,IAAID,iBAAiBE,SAAS,GAAGD;IAC/C,KAAKP,QAAQS,SAASC,gBAAOJ,iBAAiBC,IAAID,iBAAiBC,IAAI,IAAII,KAAKC,WAAW;;EAE7F,KAAKZ,QAAQS,SAASC,gBAAOJ,iBAAiBA,iBAAiBE,SAAS,IAAIF,iBAAiB,IAAIK,KAAKC,WAAW;EAEjH,KAAKC,SAAS,UAASC,YAAYC;IACjC,KAAKf,QAAQgB,QAAQ,AAAAC,UACnBA,OAAOJ,OAAOC,YAAYC\",\"sourcesContent\":[\"import { create_random_particles, sort_particles_by_vicinity } from './particle-utils';\\nimport { Spring } from './spring';\\n\\nexport function SpringRing(amount) {\\n    // const centerSpring = new Spring(new Particle(Math.random()* window.innerWidth, Math.random()* window.innerHeight), Math.random() * 0.0025);\\n    this.springs = [];\\n    let particles = create_random_particles(amount, 0, window.innerWidth, 0, window.innerHeight);\\n    let sorted_particles = sort_particles_by_vicinity(particles);\\n    for (let i = 0; i < sorted_particles.length - 1; i++) {\\n      this.springs.push(new Spring(sorted_particles[i], sorted_particles[i + 1], Math.random() * 0.0025));\\n    }\\n    this.springs.push(new Spring(sorted_particles[sorted_particles.length - 1], sorted_particles[0], Math.random() * 0.0025));\\n\\n    this.update = function(time_slice, surface_smoothness) {\\n      this.springs.forEach(spring =>\\n        spring.update(time_slice, surface_smoothness)\\n      );\\n    }\\n  }\"]}"}